package com.sathya.springmvc.productcontroller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.sathya.springmvc.productentity.ProductEntity;
import com.sathya.springmvc.productmodel.ProductModel;
import com.sathya.springmvc.productservice.ProductService;

@Controller
public class ProductController {
	@Autowired
	ProductService productservice;
    
	@GetMapping("/productform")
	public String getProductForm() {
		return "add-product";
	}

	@PostMapping("/saveProduct")
	public String saveProduct(ProductModel productModel) {
		productservice.saveProduct(productModel);
		return "success";
	}
	@GetMapping("/getallproducts")
	public String getAllProducts(Model model) {
		List<ProductEntity> products = productservice.getAllProducts();
		model.addAttribute("products",products); 
		return "product-list";
	}
	@GetMapping("/getsearchform")
	public String getSearchForm() {
		return "search";
		}
	
	@PostMapping("/searchbyid")
	public String searchById(@RequestParam Long id,Model model) {
		ProductEntity products = productservice.searchById(id);
		model.addAttribute("products", products);
		return "search";
	}
	@GetMapping("/delete/{id}")
	public String deleteProductById(@PathVariable("id") Long id) {
		productservice.deleteProductById(id);
		return "redirect:/getallproducts";
	}
	@GetMapping("/edit/{id}")
	public String editById(@PathVariable("id") Long id,Model model) {
		ProductModel products = productservice.editById(id);
		model.addAttribute("products",products);
		model.addAttribute("id",id);
		return "edit-product";
		
	}
	@PostMapping("/editproduct/{id}")
	public String editProduct(Long id,Model mode) {
		ProductEntity entity = new ProductEntity();
		ProductModel model = new ProductModel();
		entity.setName(model.getName());
    	entity.setBrand(model.getBrand());
    	entity.setMadeIn(model.getMadeIn());
    	entity.setPrice(model.getPrice());
    	entity.setQuantity(model.getQuantity());
    	List<ProductEntity> products = productservice.getAllProducts();
		mode.addAttribute("products",products);
		productservice.editProduct(entity);
    	return "redirect:/product-list";
	}
	
	
	
}
