package com.sathya.springmvc.productcontroller;

import java.util.List;
import java.util.Optional;
import java.util.function.Function;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.FluentQuery.FetchableFluentQuery;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.sathya.springmvc.productentity.ProductEntity;
import com.sathya.springmvc.productmodel.ProductModel;
import com.sathya.springmvc.productrepository.ProductRepository;
import com.sathya.springmvc.productservice.ProductService;

@Controller
public class ProductController {
	@Autowired
	ProductService productservice;
 ProductRepository productRepository = new ProductRepository() {
	
	@Override
	public <S extends ProductEntity> Optional<S> findOne(Example<S> example) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}
	
	@Override
	public <S extends ProductEntity, R> R findBy(Example<S> example,
			Function<FetchableFluentQuery<S>, R> queryFunction) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public <S extends ProductEntity> Page<S> findAll(Example<S> example, Pageable pageable) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public <S extends ProductEntity> boolean exists(Example<S> example) {
		// TODO Auto-generated method stub
		return false;
	}
	
	@Override
	public <S extends ProductEntity> long count(Example<S> example) {
		// TODO Auto-generated method stub
		return 0;
	}
	
	@Override
	public Page<ProductEntity> findAll(Pageable pageable) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public List<ProductEntity> findAll(Sort sort) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public <S extends ProductEntity> S save(S entity) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public Optional<ProductEntity> findById(Long id) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}
	
	@Override
	public boolean existsById(Long id) {
		// TODO Auto-generated method stub
		return false;
	}
	
	@Override
	public void deleteById(Long id) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void deleteAllById(Iterable<? extends Long> ids) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void deleteAll(Iterable<? extends ProductEntity> entities) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void deleteAll() {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void delete(ProductEntity entity) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public long count() {
		// TODO Auto-generated method stub
		return 0;
	}
	
	@Override
	public <S extends ProductEntity> List<S> saveAll(Iterable<S> entities) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public List<ProductEntity> findAllById(Iterable<Long> ids) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public List<ProductEntity> findAll() {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public <S extends ProductEntity> S saveAndFlush(S entity) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public <S extends ProductEntity> List<S> saveAllAndFlush(Iterable<S> entities) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public ProductEntity getReferenceById(Long id) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public ProductEntity getOne(Long id) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public ProductEntity getById(Long id) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public void flush() {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public <S extends ProductEntity> List<S> findAll(Example<S> example, Sort sort) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public <S extends ProductEntity> List<S> findAll(Example<S> example) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public void deleteAllInBatch(Iterable<ProductEntity> entities) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void deleteAllInBatch() {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void deleteAllByIdInBatch(Iterable<Long> ids) {
		// TODO Auto-generated method stub
		
	}
};
    
	@GetMapping("/productform")
	public String getProductForm() {
		return "add-product";
	}

	@PostMapping("/saveProduct")
	public String saveProduct(ProductModel productModel) {
		productservice.saveProduct(productModel);
		return "success";
	}
	@GetMapping("/getallproducts")
	public String getAllProducts(Model model) {
		List<ProductEntity> products = productservice.getAllProducts();
		model.addAttribute("products",products); 
		return "product-list";
	}
	@GetMapping("/getsearchform")
	public String getSearchForm() {
		return "search";
		}
	
	@PostMapping("/searchbyid")
	public String searchById(@RequestParam Long id,Model model) {
		ProductEntity products = productservice.searchById(id);
		model.addAttribute("products", products);
		return "search";
	}
	@GetMapping("/delete/{id}")
	public String deleteProductById(@PathVariable("id") Long id) {
		productservice.deleteProductById(id);
		return "redirect:/getallproducts";
	}
	@GetMapping("/edit/{id}")
	public String editById(@PathVariable("id") Long id,Model model) {
		ProductModel products = productservice.editById(id);
		model.addAttribute("products",products);
		model.addAttribute("id",id);
		return "edit-product";
		
	}
	@PostMapping("/editproduct/{id}")
	public String editProduct(Long id,Model mode,@ModelAttribute("product") ProductModel productModel) {
		
		Optional<ProductEntity> optionalProduct = productRepository.findById(id);
		if(optionalProduct.isPresent()) {
		ProductEntity entity = optionalProduct.get();
		entity.setName(productModel.getName());
    	entity.setBrand(productModel.getBrand());
    	entity.setMadeIn(productModel.getMadeIn());
    	entity.setPrice(productModel.getPrice());
    	entity.setQuantity(productModel.getQuantity());
    	productRepository.save(entity);
    	
	}
		return "redirect:/getallproducts";
}
}